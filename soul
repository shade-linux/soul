#!/usr/bin/env bash

# Font coloring
export normal=$'\e[0m' # Normal text
export bold=$(tput bold) # Bold text

# Normal colours
export red=$(tput setaf 1) # Red
export green=$(tput setaf 2) # Green
export blue=$(tput setaf 4) # Blue

# Bold colours
export bold_red="$bold$red" # Bold red
export bold_green="$bold$green" # Bold green
export bold_blue="$bold$blue" # Bold blue

# Bold green message for success
function success() {
    echo "--> ${bold_green}${1}${normal}"
}

# Blue message for information
function info() {
    echo "--> ${blue}${1}${normal}"
}

# Bold red message for errors
function error() {
    echo "--> ${bold_red}${1}${normal}"
}

function help() {
    cat <<EOF
Usage: soul [OPTION] [...]

Options:
    help     Show this text
    link     Link files as specified in instructions
    unlink   Unlink linked files
EOF
}

function dot_link() {
    if [ "$#" -ne 2 ]; then
        error "Please specify the instruction file for soul to follow"
        exit 1
    fi
    ls ${2} >/dev/null 2>&1
    if [ $? != 0 ]; then
        error "Please specify a valid instruction file for soul to follow"
        exit 1
    fi
    info "Linking files as specified in ${2}"
    while read i; do
        [[ "$i" =~ ^[[:space:]]*# ]] && continue
        [[ "$i" =~ ^[[:space:]]*$ ]] && continue
        test=$(echo ${i} | sed 's/ -> / /g' | awk '{print $1;}' | sed '/#/d')
        ls ${test} > /dev/null 2>&1
        if [ $? != "0" ]; then
            error "Couldn't link ${i}: source file does not exist"
        else
            mkdir -p $(echo ${i} | sed 's/.* ->//g' | xargs dirname 2>/dev/null) > /dev/null 2>&1
            $(echo "ln -sf ${i}" | sed 's/ -> / /g' | xargs | sed 's/^ln -sf$//g' | sed '/#/d')
            if [[ ${i} != "#*" ]]; then
                success "File ${i} linked"
            fi
        fi
    done <${2}
}

function dot_unlink() {
    if [ "$#" -ne 2 ]; then
        error "Please specify the instruction file for soul to follow"
        exit 1
    fi
    ls ${2} >/dev/null 2>&1
    if [ $? != 0 ]; then
        error "Please specify a valid instruction file for soul to follow"
        exit 1
    fi
    info "Unlinking linked files as specified in ${2}"
    while read i; do
        [[ "$i" =~ ^[[:space:]]*# ]] && continue
        [[ "$i" =~ ^[[:space:]]*$ ]] && continue
        test=$(echo ${i} | sed 's/ -> / /g' | awk 'NF{ print $NF }')
        ls ${test} > /dev/null 2>&1
        if [ $? != "0" ]; then
            error "Couldn't unlink ${test}: destination file does not exist"
        else
            $(echo ${i} | sed 's/ -> / /g' | sed 's/[^ ]* *//' | sed 's/^/unlink /g') 2>/dev/null
            success "File ${test} unlinked"
        fi
    done <${2}
}

function install_packages() {
    if [ "$#" -ne 2 ]; then
        error "Please specify the instruction file for soul to follow"
        exit 1
    fi
    ls ${2} >/dev/null 2>&1
    if [ $? != 0 ]; then
        error "Please specify a valid instruction file for soul to follow"
        exit 1
    fi
    info "Downloading packages as specified in ${2}"
    packages=$(cat ${2} | sed 's/#.*//g' | sed 's/^COMMAND.*//g' | xargs | tr " " "\n")
    command_install=$(cat ${2} | grep '^COMMAND_INSTALL=' | sed 's/COMMAND_INSTALL=//g' | sed "s/'//g")
    ${command_install} ${packages}
}

case "$1" in
    '') help ;;
    help) help ;;
    link) dot_link $@ ;;
    unlink) dot_unlink $@ ;;
    ensure) install_packages $@ ;;
    *) error "$0: invalid option -- '$1'. Try '$0 help' for more information" ;;
esac
